{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport BlogForm from './components/BlogForm';\nimport BlogList from './components/BlogList';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './index.css';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorColor, setErrorColor] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => {\n      setBlogs(blogs);\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      console.log(user.token);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      setErrorMessage('Log in successful');\n      setErrorColor('green');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage('wrong username or password');\n      setErrorColor('red');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    }\n  };\n\n  const loginForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"log in to application\"), React.createElement(Notification, {\n    message: errorMessage,\n    color: errorColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"username\", React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"password\", React.createElement(\"input\", {\n    id: \"password\",\n    type: \"text\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    id: \"login-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"login\")));\n\n  const addBlog = blogObject => {\n    blogFormRef.current.toggleVisibility();\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setErrorMessage(`a new blog added: ${returnedBlog.title} from ${returnedBlog.author}`);\n      setErrorColor('green');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    }).catch(() => {\n      setErrorMessage('Blog details not complete');\n      setErrorColor('red');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    });\n  };\n\n  const blogFormRef = React.createRef();\n\n  const handleDelete = blogToDelete => () => {\n    if (window.confirm(`Remove blog ${blogToDelete.title} by ${blogToDelete.author}`)) {\n      blogService.deleteBlog(blogToDelete);\n      setBlogs(blogs.filter(blog => blog.id !== blogToDelete.id));\n    }\n  };\n\n  const handleLike = blogToLike => async () => {\n    const updatedBlog = await blogService.addLike(blogToLike);\n    setBlogs(blogs.map(blog => {\n      if (blog.id === blogToLike.id) {\n        return updatedBlog;\n      } else {\n        return blog;\n      }\n    }));\n  };\n\n  const blogForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(Notification, {\n    message: errorMessage,\n    color: errorColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, user.name, \" logged in \", React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"logout\")), React.createElement(Togglable, {\n    buttonLabel: \"new blog\",\n    ref: blogFormRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(BlogList, {\n    blogs: blogs,\n    removeBlog: handleDelete,\n    likeBlog: handleLike,\n    loggedInUser: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(BlogForm, {\n    createBlog: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, user === null ? loginForm() : blogForm());\n};\n\nexport default App;","map":{"version":3,"sources":["/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Notification","Togglable","BlogForm","BlogList","blogService","loginService","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","errorColor","setErrorColor","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogout","removeItem","handleLogin","event","preventDefault","login","console","log","token","setItem","stringify","setToken","setTimeout","exception","loginForm","target","value","addBlog","blogObject","blogFormRef","current","toggleVisibility","create","returnedBlog","concat","title","author","catch","createRef","handleDelete","blogToDelete","confirm","deleteBlog","filter","blog","id","handleLike","blogToLike","updatedBlog","addLike","map","blogForm","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\nimport BlogList from './components/BlogList'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [errorColor, setErrorColor] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(blogs => {\n        setBlogs( blogs )\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({ username, password })\n      console.log(user.token)\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setErrorMessage('Log in successful')\n      setErrorColor('green')\n      setTimeout(() => {\n        setErrorMessage(null)\n        setErrorColor(null)\n      },5000)\n    } catch(exception){\n      setErrorMessage('wrong username or password')\n      setErrorColor('red')\n      setTimeout(() => {\n        setErrorMessage(null)\n        setErrorColor(null)\n      },5000)\n    }\n  }\n\n\n\n  const loginForm = () => (\n    <div>\n      <h1>log in to application</h1>\n      <Notification message={errorMessage} color={errorColor}/>\n      <form onSubmit={handleLogin}>\n        <div>\n          username<input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}/>\n        </div>\n        <div>\n          password<input\n            id=\"password\"\n            type=\"text\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}/>\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n\n\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setErrorMessage(`a new blog added: ${returnedBlog.title} from ${returnedBlog.author}`)\n        setErrorColor('green')\n        setTimeout(() => {\n          setErrorMessage(null)\n          setErrorColor(null)\n        },5000)\n      }).catch(() => {\n        setErrorMessage('Blog details not complete')\n        setErrorColor('red')\n        setTimeout(() => {\n          setErrorMessage(null)\n          setErrorColor(null)\n        },5000)\n      })\n  }\n\n  const blogFormRef = React.createRef()\n\n  const handleDelete = (blogToDelete) => () => {\n    if (window.confirm(`Remove blog ${blogToDelete.title} by ${blogToDelete.author}`)){\n      blogService.deleteBlog(blogToDelete)\n      setBlogs(blogs.filter(blog => blog.id!==blogToDelete.id))\n    }\n  }\n\n  const handleLike = (blogToLike) => async () => {\n    const updatedBlog = await blogService.addLike(blogToLike)\n    setBlogs(blogs.map(blog => {\n      if (blog.id===blogToLike.id){\n        return updatedBlog\n      } else {\n        return blog\n      }\n    }))\n  }\n\n  const blogForm = () => (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={errorMessage} color={errorColor}/>\n      <p>{user.name} logged in <button onClick={handleLogout}>logout</button></p>\n\n      <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\n        <BlogList blogs={blogs} removeBlog={handleDelete} likeBlog={handleLike} loggedInUser={user}/>\n        <BlogForm createBlog={addBlog}/>\n      </Togglable>\n    </div>\n  )\n\n\n  return (\n    <div>\n      {user === null ? loginForm() : blogForm()}\n    </div>\n\n  )\n\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}