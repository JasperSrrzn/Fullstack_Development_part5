{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const loginForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"log in to application\"), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"username\", React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"password\", React.createElement(\"input\", {\n    type: \"text\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"login\")));\n\n  const blogForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, user.name, \" logged in \", React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"logout\")), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, user === null ? loginForm() : blogForm());\n};\n\nexport default App;","map":{"version":3,"sources":["/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogout","removeItem","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","loginForm","target","value","blogForm","name","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({username, password})\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch(exception){\n      setErrorMessage('Wrong credentials')\n      setTimeout(()=>{\n        setErrorMessage(null)\n      },5000)\n    }\n  }\n\n  const loginForm = () => (\n    <div>\n    <h1>log in to application</h1>\n    <form onSubmit={handleLogin}>\n      <div>\n      username<input\n        type=\"text\"\n        value={username}\n        name=\"Username\"\n        onChange={({target}) => setUsername(target.value)}/>\n      </div>\n      <div>\n      password<input\n        type=\"text\"\n        value={password}\n        name=\"Password\"\n        onChange={({target}) => setPassword(target.value)}/>\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n    </div>\n  )\n\n  const blogForm = () => (\n    <div>\n     <h2>blogs</h2>\n     <p>{user.name} logged in <button onClick={handleLogout}>logout</button></p>\n\n     {blogs.map(blog =>\n       <Blog key={blog.id} blog={blog} />\n     )}\n   </div>\n  )\n\n\n  return (\n    <div>\n    {user === null ? loginForm() : blogForm()}\n    </div>\n\n  )\n\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}