{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/components/Togglable.js\";\nimport React, { useState, useImperativeHandle } from 'react';\n\nconst Togglable = props => {\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'None' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'None'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return toggleVisibility;\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: hideWhenVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.buttonLabel)), React.createElement(\"div\", {\n    style: showWhenVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children, React.createElement(\"button\", {\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"cancel\")));\n};\n\nexport default Togglable;","map":{"version":3,"sources":["/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/components/Togglable.js"],"names":["React","useState","useImperativeHandle","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","ref","buttonLabel","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,mBAAzB,QAAmD,OAAnD;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMM,eAAe,GAAG;AAACC,IAAAA,OAAO,EAAEH,OAAO,GAAC,MAAD,GAAQ;AAAzB,GAAxB;AACA,QAAMI,eAAe,GAAG;AAACD,IAAAA,OAAO,EAAEH,OAAO,GAAC,EAAD,GAAI;AAArB,GAAxB;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIAH,EAAAA,mBAAmB,CAACS,GAAD,EAAM,MAAM;AAC7B,WACED,gBADF;AAGD,GAJkB,CAAnB;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,KAAK,EAAEH,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCN,KAAK,CAACQ,WAA1C,CADA,CADA,EAIA;AAAK,IAAA,KAAK,EAAEH,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,KAAK,CAACS,QADP,EAEA;AAAQ,IAAA,OAAO,EAAEH,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CAJA,CADF;AAWD,CA3BD;;AA6BA,eAAeP,SAAf","sourcesContent":["import React, {useState, useImperativeHandle} from 'react'\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = {display: visible?'None':''}\n  const showWhenVisible = {display: visible?'':'None'}\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return (\n      toggleVisibility\n    )\n  })\n\n  return (\n    <div>\n    <div style={hideWhenVisible}>\n    <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n    </div>\n    <div style={showWhenVisible}>\n    {props.children}\n    <button onClick={toggleVisibility}>cancel</button>\n    </div>\n    </div>\n  )\n}\n\nexport default Togglable\n"]},"metadata":{},"sourceType":"module"}