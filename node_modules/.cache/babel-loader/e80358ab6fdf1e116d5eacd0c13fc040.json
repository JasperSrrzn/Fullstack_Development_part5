{"ast":null,"code":"var _jsxFileName = \"/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './index.css';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [errorColor, setErrorColor] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      setErrorMessage('Log in successful');\n      setErrorColor('green');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage(exception.error);\n      setErrorColor('red');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    }\n  };\n\n  const createBlog = async event => {\n    event.preventDefault();\n\n    try {\n      const blog = await blogService.addBlog({\n        title,\n        author,\n        url\n      });\n      setBlogs(blogs.concat(blog));\n      setErrorMessage(`a new blog added: ${title} from ${author}`);\n      setErrorColor('green');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage('Blog details not complete');\n      setErrorColor('red');\n      setTimeout(() => {\n        setErrorMessage(null);\n        setErrorColor(null);\n      }, 5000);\n    }\n  };\n\n  const loginForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"log in to application\"), React.createElement(Notification, {\n    message: errorMessage,\n    color: errorColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"username\", React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"password\", React.createElement(\"input\", {\n    type: \"text\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"login\")));\n\n  const blogCreationForm = () => React.createElement(\"form\", {\n    onSubmit: createBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    name: \"Title\",\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    type: \"text\",\n    value: author,\n    name: \"Author\",\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"url\", React.createElement(\"input\", {\n    type: \"text\",\n    value: url,\n    name: \"URL\",\n    onChange: ({\n      target\n    }) => setUrl(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"create\"));\n\n  const blogForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(Notification, {\n    message: errorMessage,\n    color: errorColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, user.name, \" logged in \", React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"logout\")), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"create new\"), blogCreationForm(), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, user === null ? loginForm() : blogForm());\n};\n\nexport default App;","map":{"version":3,"sources":["/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","title","setTitle","author","setAuthor","url","setUrl","errorMessage","setErrorMessage","errorColor","setErrorColor","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogout","removeItem","handleLogin","event","preventDefault","login","setItem","stringify","setToken","token","setTimeout","exception","error","createBlog","blog","addBlog","concat","loginForm","target","value","blogCreationForm","blogForm","name","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [errorColor, setErrorColor] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({username, password})\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setErrorMessage('Log in successful')\n      setErrorColor('green')\n      setTimeout(()=>{\n        setErrorMessage(null)\n        setErrorColor(null)\n      },5000)\n    } catch(exception){\n      setErrorMessage(exception.error)\n      setErrorColor('red')\n      setTimeout(()=>{\n        setErrorMessage(null)\n        setErrorColor(null)\n      },5000)\n    }\n  }\n\n  const createBlog = async (event) => {\n    event.preventDefault()\n    try {\n      const blog = await blogService.addBlog({title, author, url})\n      setBlogs(blogs.concat(blog))\n      setErrorMessage(`a new blog added: ${title} from ${author}`)\n      setErrorColor('green')\n      setTimeout(()=>{\n        setErrorMessage(null)\n        setErrorColor(null)\n      },5000)\n    } catch(exception){\n      setErrorMessage('Blog details not complete')\n      setErrorColor('red')\n      setTimeout(()=>{\n        setErrorMessage(null)\n        setErrorColor(null)\n      },5000)\n    }\n  }\n\n  const loginForm = () => (\n    <div>\n    <h1>log in to application</h1>\n    <Notification message={errorMessage} color={errorColor}/>\n    <form onSubmit={handleLogin}>\n      <div>\n      username<input\n        type=\"text\"\n        value={username}\n        name=\"Username\"\n        onChange={({target}) => setUsername(target.value)}/>\n      </div>\n      <div>\n      password<input\n        type=\"text\"\n        value={password}\n        name=\"Password\"\n        onChange={({target}) => setPassword(target.value)}/>\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n    </div>\n  )\n\n  const blogCreationForm = () => (\n\n    <form onSubmit={createBlog}>\n      <div>\n      title<input\n        type=\"text\"\n        value={title}\n        name=\"Title\"\n        onChange={({target}) => setTitle(target.value)}/>\n      </div>\n      <div>\n      author<input\n        type=\"text\"\n        value={author}\n        name=\"Author\"\n        onChange={({target}) => setAuthor(target.value)}/>\n      </div>\n      <div>\n      url<input\n        type=\"text\"\n        value={url}\n        name=\"URL\"\n        onChange={({target}) => setUrl(target.value)}/>\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n  )\n\n  const blogForm = () => (\n    <div>\n     <h2>blogs</h2>\n     <Notification message={errorMessage} color={errorColor}/>\n     <p>{user.name} logged in <button onClick={handleLogout}>logout</button></p>\n     <h2>create new</h2>\n     {blogCreationForm()}\n     {blogs.map(blog =>\n       <Blog key={blog.id} blog={blog} />\n     )}\n   </div>\n  )\n\n\n  return (\n    <div>\n    {user === null ? loginForm() : blogForm()}\n    </div>\n\n  )\n\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}