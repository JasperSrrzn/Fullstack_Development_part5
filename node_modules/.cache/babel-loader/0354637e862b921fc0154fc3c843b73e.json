{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newBlog => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newBlog, config);\n  return response.data;\n};\n\nconst addLike = async blog => {\n  const newBlog = { ...blog,\n    likes: blog.likes + 1\n  };\n  const response = await axios.put(`${baseUrl}/${blog.id}`, newBlog);\n  return response.data;\n};\n\nconst deleteBlog = async blog => {\n  const config = {\n    header: {\n      Authorization: token\n    }\n  };\n  return await axios.delete(`${baseUrl}/${blog.id}`, config);\n};\n\nexport default {\n  setToken,\n  getAll,\n  create,\n  addLike,\n  deleteBlog\n};","map":{"version":3,"sources":["/home/jasper/Desktop/FullStack-GIT/Fullstack_Development_part5/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newBlog","config","headers","Authorization","post","addLike","blog","likes","put","id","deleteBlog","header","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,OAAN,IAAiB;AAC9B,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAEb;AAAhB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,OAApB,EAA6BC,MAA7B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMO,OAAO,GAAG,MAAMC,IAAN,IAAc;AAC5B,QAAMN,OAAO,GAAG,EAAC,GAAGM,IAAJ;AAAUC,IAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,GAAW;AAA5B,GAAhB;AACA,QAAMV,QAAQ,GAAG,MAAMT,KAAK,CAACoB,GAAN,CAAW,GAAEnB,OAAQ,IAAGiB,IAAI,CAACG,EAAG,EAAhC,EAAmCT,OAAnC,CAAvB;AACA,SAAOH,QAAQ,CAACC,IAAhB;AACD,CAJD;;AAOA,MAAMY,UAAU,GAAG,MAAMJ,IAAN,IAAc;AAC/B,QAAML,MAAM,GAAG;AACbU,IAAAA,MAAM,EAAE;AAACR,MAAAA,aAAa,EAAEb;AAAhB;AADK,GAAf;AAGA,SAAO,MAAMF,KAAK,CAACwB,MAAN,CAAc,GAAEvB,OAAQ,IAAGiB,IAAI,CAACG,EAAG,EAAnC,EAAqCR,MAArC,CAAb;AACD,CALD;;AAOA,eAAe;AAAEV,EAAAA,QAAF;AAAaE,EAAAA,MAAb;AAAqBM,EAAAA,MAArB;AAA6BM,EAAAA,OAA7B;AAAsCK,EAAAA;AAAtC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newBlog => {\n  const config = {\n    headers: {Authorization: token}\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst addLike = async blog => {\n  const newBlog = {...blog, likes: blog.likes+1}\n  const response = await axios.put(`${baseUrl}/${blog.id}`, newBlog)\n  return response.data\n}\n\n\nconst deleteBlog = async blog => {\n  const config = {\n    header: {Authorization: token}\n  }\n  return await axios.delete(`${baseUrl}/${blog.id}`,config)\n}\n\nexport default { setToken,  getAll, create, addLike, deleteBlog}\n"]},"metadata":{},"sourceType":"module"}